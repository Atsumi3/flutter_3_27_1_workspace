name: Deploy to Store (Apple)

on:
  workflow_dispatch:

env:
  # Android: packageName, iOS: bundleIdentifier
  PACKAGE_ID: any.example.app.id
  # Provisioning Profile を保存するディレクトリのパス。固定
  PP_DIST_PATH: ~/Library/MobileDevice/Provisioning\ Profiles

# このActionsで必要なSecretsは以下の通りです
# - APPSTORE_KEY_CONTENT: p8 ファイルの内容
# - APPSTORE_KEY_ID: Key ID
# - APPSTORE_ISSUER_ID: Issuer ID
# - PP_APPSTORE_BASE64: App Store 用の Provisioning Profile (base64 encode)
# - P12_BASE64: ios_distribution.p12 (base64 encode)
# - P12_PASSWORD: p12 ファイルのパスワード

jobs:
  deploy_store_play_store:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-flutter-env

      # アプリのビルドに利用するプロビジョニングプロファイルを設定します。
      # 複数ある場合はファイル名を変えて保存します。app, notification_services など。
      - name: Setup Provisioning Profiles
        run: |
          mkdir -p ${{ env.PP_DIST_PATH }}

          # "add $ to before { to avoid secrets scanning."
          # echo -n ${{ secrets.PP_APPSTORE_BASE64 }} | base64 -d > ${{ env.PP_DIST_PATH }}/app.mobileprovision

          # example: if you have multiple provisioning profiles, add them all.
          # echo -n ${{ secrets.PP_APPSTORE_NOTIFICATION_SERVICES_BASE64 }} | base64 -d > ${{ env.PP_DIST_PATH }}/notification_services.mobileprovision

      # アプリのビルドに利用する証明書を設定します。
      # - name: Install Certificates
      #   uses: Apple-Actions/import-codesign-certs@master
      #   with:
      #     p12-file-base64: ${{ secrets.P12_BASE64 }}
      #     p12-password: ${{ secrets.P12_PASSWORD }}

      # ExportOptions.plist を利用することをおすすめします。
      - name: Build
        working-directory: packages/app
        id: build
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist --no-tree-shake-icons
      
      - name: Find Binary
        id: binary_path
        run: echo "binary_path=$(find . -name '*.ipa')" >> $GITHUB_OUTPUT

      # App Store にアップロードします。
      # 必要な情報は以下の通りです。
      # - APPSTORE_KEY_CONTENT: p8 ファイルの内容
      # - APPSTORE_KEY_ID: Key ID
      # - APPSTORE_ISSUER_ID: Issuer ID
      # - name: Deploy to Store
      #   run: |
      #     mkdir ./private_keys

      #     # "add $ to before { to avoid secrets scanning."
      #     echo "${{ secrets.APPSTORE_KEY_CONTENT }}" > ./private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8
      #     xcrun altool --upload-app --type ios -f ${{ steps.build.outputs.binary_path }} --apiKey ${{ secrets.APPSTORE_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}
