name: Deploy to Store (Google)

on:
  workflow_dispatch:

env:
  # Android: packageName, iOS: bundleIdentifier
  PACKAGE_ID: any.example.app.id

# このActionsで必要なSecretsは以下の通りです
# - PLAY_STORE_CREDENTIALS_BASE64: Google Play Console 用のサービスアカウントキー (base64 encode)
# - KEYSTORE_BASE64: keystore.jks (base64 encode)
# - KEYSTORE_PASSWORD: keystore.jks のパスワード
# - KEY_ALIAS: keystore.jks のエイリアス
# - KEY_PASSWORD: keystore.jks のエイリアスのパスワード

jobs:
  deploy_store_google_play:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-flutter-env

      # アプリのビルドに利用する証明書を設定します。
      - name: Setup Certificates
        working-directory: packages/app
        run: |
          echo "add $ to before { to avoid secrets scanning."
          mkdir -p $HOME/keystores
          # echo "{{ secrets.KEYSTORE_BASE64 }}" | base64 -d > $HOME/keystores/release.keystore
          # echo "{{ secrets.PLAY_STORE_CREDENTIALS_BASE64 }}" | base64 -d > service_account.json

      # アプリのビルド
      # envの設定名はsigningConfig.gradle等の名前と合わせる
      # 
      # イメージ
      # signingConfigs {
      #     production {
      #       storeFile file(System.getenv("HOME") + "/keystores/release.keystore")
      #       storePassword System.getenv('KEYSTORE_PASSWORD')
      #       keyAlias System.getenv('KEY_ALIAS')
      #       keyPassword System.getenv('KEY_PASSWORD')
      #   }
      # }
      - name: Build
        working-directory: packages/app
        id: build
        # env:
        #   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        #   KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        #   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: flutter build apk --release --no-tree-shake-icons
      
      - name: Find Binary
        id: binary_path
        run: echo "binary_path=$(find . -name '*.apk' | grep 'flutter-apk')" >> $GITHUB_OUTPUT
      
      - name: Check Binary Path
        run: |
          echo ${{ steps.build.outputs.binary_path }}

      # - name: Deploy to Store
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJson: ./service_account.json
      #     packageName: ${{ env.PACKAGE_ID }}
      #     releaseFiles: ${{ steps.build.outputs.binary_path }}
      #     track: internal
      #     status: completed
