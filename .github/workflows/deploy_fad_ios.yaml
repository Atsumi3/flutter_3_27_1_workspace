name:  App Distribution (Android)

on:
  workflow_dispatch:

env:
  # [固定] Provisioning Profile を保存するディレクトリのパス
  PP_DIST_PATH: ~/Library/MobileDevice/Provisioning\ Profiles

  # Firebase AppDistribution で配信するグループ名
  DISTRIBUTION_GROUPS: internal_tester

  # Crashlytics にシンボルをアップロードするかどうか。 Podfile に Firebase/Crashlytics が追加されている必要があります。
  SEND_SYMBOLS_TO_CRASHLYTICS: true

# このActionsで必要なSecretsは以下の通りです
# - PP_ADHOC_BASE64: AdHoc 用の Provisioning Profile (base64 encode)
# - P12_BASE64: ios_distribution.p12 (base64 encode)
# - P12_PASSWORD: p12 ファイルのパスワード
# - FIREBASE_APP_ID_IOS_PRODUCTION: Firebase App ID (Production)
# - CREDENTIAL_FILE_CONTENT: Firebase App Distribution 用のサービスアカウントキー

jobs:
  deploy_store_app_store:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-flutter-env

      # アプリのビルドに利用するプロビジョニングプロファイルを設定します。
      # 複数ある場合はファイル名を変えて保存します。app, notification_services など。
      - name: Setup Provisioning Profiles
        run: |
          mkdir -p ${{ env.PP_DIST_PATH }}

          echo -n ${{ secrets.PP_ADHOC_BASE64 }} | base64 -d > ${{ env.PP_DIST_PATH }}/app.mobileprovision

          # example: if you have multiple provisioning profiles, add them all.
          # echo -n ${{ secrets.PP_APPSTORE_NOTIFICATION_SERVICES_BASE64 }} | base64 -d > ${{ env.PP_DIST_PATH }}/notification_services.mobileprovision

      # アプリのビルドに利用する証明書を設定します。
      - name: Install Certificates
        uses: Apple-Actions/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      # ExportOptions.plist を利用することをおすすめします。
      - name: Build
        working-directory: packages/app
        id: build
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist --no-tree-shake-icons
      
      - name: Find Binary
        id: binary_path
        run: echo "binary_path=$(find . -name '*.ipa')" >> $GITHUB_OUTPUT
      
      # Crashlytics にシンボルをアップロードします。
      - name: Send Symbols to Crashlytics If Need
        if: ${{ env.SEND_SYMBOLS_TO_CRASHLYTICS }}
        working-directory: packages/app
        run: |
          GOOGLE_SERVICE_INFO_PATH=ios/Runner/GoogleService-info.plist
          DSYM_FILE_PATH=$(find . -name '*.app.dSYM')
          ./ios/Pods/FirebaseCrashlytics/upload-symbols -gsp $GOOGLE_SERVICE_INFO_PATH -p ios $DSYM_FILE_PATH

      # WIP: 動かないがfastlaneは使いたくないので、後で対応する
      - name: Deploy To Firebase App Distribution
        if: false
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_IOS_PRODUCTION }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: ${{ env.DISTRIBUTION_GROUPS }}
          file: ${{ steps.build.outputs.binary_path }}
